{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","props","name","value","label","required","pattern","onChange","useState","Math","random","toString","slice","id","touched","setTouched","hasError","changed","newValue","length","replaceAll","isValidByPattern","htmlFor","classNames","type","placeholder","event","target","onBlur","NewMovie","onAdd","count","setCount","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","onSubmit","preventDefault","prev","newTitle","newDescription","newImageUrl","newImdbUrl","newImdbId","disabled","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d2216fd.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  pattern?: RegExp\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nfunction isValidByPattern(\n  value: string,\n  pattern: RegExp | undefined,\n) {\n  if (!pattern) {\n    return true;\n  }\n\n  return value.length === value.replaceAll(pattern, '').length;\n}\n\nexport const TextField: React.FC<Props> = (props) => {\n  const {\n    name,\n    value,\n    label = name,\n    required = false,\n    pattern,\n    onChange = () => {},\n  } = props;\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setTouched] = useState(false);\n\n  const hasError = touched && required && !value;\n\n  const changed = (newValue: string) => {\n    if (pattern && !isValidByPattern(newValue, pattern)) {\n      return;\n    }\n\n    onChange(newValue);\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => changed(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import { FC, FormEvent, useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype NewMovieProps = {\n  onAdd: (movie: Movie) => void\n};\n\nexport const NewMovie: FC<NewMovieProps> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const clearForm = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const isValidForm = (): boolean => {\n    return title !== '' && imgUrl !== '' && imdbUrl !== '' && imdbId !== '';\n  };\n\n  const submit = (event: FormEvent) => {\n    event.preventDefault();\n    onAdd({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } as Movie);\n\n    setCount(prev => prev + 1);\n    clearForm();\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={submit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={(newTitle) => setTitle(newTitle)}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={(newDescription) => setDescription(newDescription)}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={(newImageUrl) => setImgUrl(newImageUrl)}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={(newImdbUrl) => setImdbUrl(newImdbUrl)}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={(newImdbId) => setImdbId(newImdbId)}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={!isValidForm()}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n  const add = (movie: Movie) => {\n    setMovies(prev => [...prev, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={add} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}